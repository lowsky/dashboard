version: 2
workflows:
  version: 2
  build-and-deploy:
    jobs:
      - buildprep
      - visual:
          requires:
            - buildprep
      - analyse:
          requires:
            - buildprep
      - tests:
          requires:
            - buildprep
      - build:
          requires:
            - analyse
            - tests
jobs:
  build:
    docker:
      - image: cypress/base:10
    steps:
      - setup_remote_docker
      - run:
          name: message
          command: "echo Overall target built."
  buildprep:
    docker:
      - image: cypress/base:10
    steps:
      - checkout
      - setup_remote_docker
      - run:
          name: status message
          command: "echo building ... dashboard:$CIRCLE_SHA1 ."
      - run:
          name: show env
          command: env
      - restore_cache:
          key: lowsky-dashboard-cache-{{ checksum "yarn.lock" }}
      - restore_cache:
          key: lowsky-dashboard-srv-cache-{{ checksum "server/yarn.lock" }}
      - restore_cache:
          key: lowsky-dashboard-yarn-cache-{{ checksum "yarn.lock" }}-{{ checksum "server/yarn.lock" }}
      - run:
          name: yarn install
          command: |
              if [ ! -d node_modules ]; then
                  set -exu
                  yarn
              fi
              if [ ! -d server/node_modules ]; then
                  set -exu
                  yarn
              fi
      - save_cache:
          key: lowsky-dashboard-cache-{{ checksum "yarn.lock" }}
          paths:
            - ./node_modules
            - ~/.cache
      - save_cache:
          key: lowsky-dashboard-srv-cache-{{ checksum "server/yarn.lock" }}
          paths:
            - ./server/node_modules
      - save_cache:
          key: lowsky-dashboard-yarn-cache-{{ checksum "yarn.lock" }}-{{ checksum "server/yarn.lock" }}
          paths:
            - ~/.cache/yarn
  tests:
    docker:
      - image: cypress/base:10
    steps:
      - checkout
      - setup_remote_docker
      - run:
          name: status message
          command: "echo testing... dashboard:$CIRCLE_SHA1 ."
      - run:
          name: env
          command: env
      - restore_cache:
          key: lowsky-dashboard-cache-{{ checksum "yarn.lock" }}
      - restore_cache:
          key: lowsky-dashboard-yarn-cache-{{ checksum "yarn.lock" }}-{{ checksum "server/yarn.lock" }}
      - run:
          name:  Download cc-test-reporter
          command: |
            mkdir -p tmp/
            curl -L https://codeclimate.com/downloads/test-reporter/test-reporter-latest-linux-amd64 > ./tmp/cc-test-reporter
            chmod +x ./tmp/cc-test-reporter
      - run:
          name: create test report output folder
          command: "mkdir -p test-reports"
      - run:
          name: run test
          command: "yarn run test:circleci"
      - store_test_results:
          path: test-reports
      - store_artifacts:
          path: test-reports
      - run:
          name: run coverage
          command: |
            yarn run coverage
            ./tmp/cc-test-reporter format-coverage -t lcov -o tmp/codeclimate.json coverage/lcov.info
      - run:
          name: Upload coverage results to Code Climate
          command: |
            ./tmp/cc-test-reporter upload-coverage -i tmp/codeclimate.json
      - run:
          name: Upload coverage results to codecov
          command: |
            cat coverage/lcov.info | yarn codacy-coverage -t $CODACY_PROJECT_TOKEN -u lowsky -n dashboard -v
  analyse:
    docker:
      - image: cypress/base:10
    steps:
      - checkout
      - setup_remote_docker
      - run:
          name: status message
          command: "echo analysing... dashboard:$CIRCLE_SHA1 ."
      - restore_cache:
          key: lowsky-dashboard-cache-{{ checksum "yarn.lock" }}
      - run:
          name: create report output folder
          command: "mkdir -p reports"
      - run:
          name: npm run lint
          command: "yarn run lint --format junit --output-file ./reports/eslint-report.xml"
      - store_test_results:
          path: ./reports
      - store_artifacts:
          path: ./reports
  visual:
    docker:
      - image: cypress/base:10
    steps:
      - checkout
      - setup_remote_docker
      - run:
          name: status message
          command: "echo analysing... dashboard:$CIRCLE_SHA1 ."
      - restore_cache:
          key: lowsky-dashboard-cache-{{ checksum "yarn.lock" }}
      - run:
          name: create report output folder
          command: "mkdir -p reports"
      - run:
          name: npm run visual tests
          command: "yarn run test:vis"
      - store_artifacts:
          path: ./cypress/screenshots
          destination: screenshots
      - store_artifacts:
          path: ./cypress/match-screenshots
          destination: match-screenshots
